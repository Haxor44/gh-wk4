name: Golang CI and docker image build in github actions
on:
    push:
        branches:
            - master
    
    pull_request:
        branches:
            - master

env:
    REGISTRY: ghcr.io
jobs:
    build:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - uses: actions/checkout@v2
            - name: Set up Golang
              uses: actions/setup-go@v2
              with:
                go-version: 1.24.4
            - name: Install dependencies
              run: go mod download
            - name: Build
              run: go build -v ./...
            - name: Run tests
              run: go test -v ./...
    
    lint:
        runs-on: ubuntu-latest
        continue-on-error: true
        steps:
            - uses: actions/checkout@v2
            - name: Super-Linter
              uses: super-linter/super-linter@v7.0.0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    build-publish-image:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Set lowercase repository name
              id: repo_name
              run: echo "repo=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.repo }}:latest
            
            - name: Slack Notification
              uses: 8398a7/action-slack@v3
              with:
                status: ${{ job.status }}
                channel: '#all-eaglebots'
                message: 'Golang CI and Docker Image Build - ${{ job.status }}'
              env:
                SLACK_WEB_HOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                SLACK_USERNAME: GH-WK4 Actions
                SLACK_ICON_EMOJI: ':rocket:'
                SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}            
                    
                